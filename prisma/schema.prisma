generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  workspace_name    String?
  workspace_icon    String?
  workspace_id      String?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  bot_id            String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Notion        Notion?
  WakaTime      WakaTime?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// ---
// model User {
//   id                String    @id @default(cuid())
//   name              String
//   providerAccountId String    @unique
//   notion            Notion?
//   wakaTime          WakaTime?
// }

model Notion {
  id String @id @unique

  databases   NotionDatabase[]
  pages       NotionPage[]
  blocks      NotionBlock[]
  accessToken String
  // User      User[]
  workspaceId String           @unique
  // relation
  User        User             @relation(fields: [userId], references: [id])
  userId      String           @unique
}

model WakaTime {
  id String @id @default(cuid())

  wakaApiKey String @unique

  User   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model NotionDatabase {
  id       String  @id @unique
  isEnable Boolean @default(true)
  title    String
  Notion   Notion? @relation(fields: [notionId], references: [id])
  notionId String?
}

model NotionBlock {
  id       String  @id @unique
  isEnable Boolean @default(true)
  title    String
  Notion   Notion? @relation(fields: [notionId], references: [id])
  notionId String?
}

model NotionPage {
  id       String  @id @unique
  isEnable Boolean @default(true)
  Notion   Notion? @relation(fields: [notionId], references: [id])
  notionId String?
}
